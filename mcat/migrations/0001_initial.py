# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-27 11:38
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Edited')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Published'), (1, 'Pending'), (2, 'Unpublished')], default=0, verbose_name='Status')),
                ('deal_type', models.CharField(choices=[(b'promotion', 'Promotion'), (b'conditional_offer', 'Conditional offer'), (b'gift', 'Gift')], default=b'promotion', max_length=120, verbose_name='Deal type')),
                ('discounted_price', models.FloatField(blank=True, null=True, verbose_name='Discounted price')),
                ('discounted_percentage', models.FloatField(blank=True, null=True, verbose_name='Discounted percentage')),
                ('deal_description', models.TextField(blank=True, verbose_name='Description')),
                ('deal_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start date')),
                ('deal_end_date', models.DateTimeField(blank=True, null=True, verbose_name='End date')),
                ('deal_conditions', models.TextField(blank=True, verbose_name='Conditions')),
                ('deal_data', jsonfield.fields.JSONField(blank=True, default=dict, verbose_name='Extra data (json format)')),
                ('image', models.ImageField(blank=True, upload_to=b'brands', verbose_name='Image')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Edited by')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Edited')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Published'), (1, 'Pending'), (2, 'Unpublished')], default=0, verbose_name='Status')),
                ('deal_type', models.CharField(choices=[(b'promotion', 'Promotion'), (b'conditional_offer', 'Conditional offer'), (b'gift', 'Gift')], default=b'promotion', max_length=120, verbose_name='Deal type')),
                ('discounted_price', models.FloatField(blank=True, null=True, verbose_name='Discounted price')),
                ('discounted_percentage', models.FloatField(blank=True, null=True, verbose_name='Discounted percentage')),
                ('deal_description', models.TextField(blank=True, verbose_name='Description')),
                ('deal_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start date')),
                ('deal_end_date', models.DateTimeField(blank=True, null=True, verbose_name='End date')),
                ('deal_conditions', models.TextField(blank=True, verbose_name='Conditions')),
                ('deal_data', jsonfield.fields.JSONField(blank=True, default=dict, verbose_name='Extra data (json format)')),
                ('image', models.ImageField(null=True, upload_to=b'categories', verbose_name='Navigation image')),
                ('template_name', models.CharField(choices=[(b'filters_on_top', 'Filters on top'), (b'default', 'Filters on side'), (b'fullwidht_filters_on_top', 'Fullwidth filters on top'), (b'only_price_range_filter', 'Only price range filter')], default=b'filters_on_top', max_length=60, verbose_name='Template')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Edited by')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='mcat.Category', verbose_name='Parent category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='CategoryCaracteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Edited')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
                ('type', models.CharField(choices=[(b'choices', 'Choices'), (b'boolean', 'Yes / No'), (b'int', 'Numeric')], default=b'choices', max_length=255)),
                ('choices', models.TextField(blank=True, verbose_name='Choices')),
                ('unit', models.CharField(blank=True, max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generic_caracteristics', to='mcat.Category', verbose_name='Category')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Edited by')),
            ],
            options={
                'ordering': ['order'],
                'verbose_name': 'Caracteristic for category',
                'verbose_name_plural': 'Caracteristics for category',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Edited')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=25, unique=True)),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Published'), (1, 'Pending'), (2, 'Unpublished')], default=0, verbose_name='Status')),
                ('deal_type', models.CharField(choices=[(b'promotion', 'Promotion'), (b'conditional_offer', 'Conditional offer'), (b'gift', 'Gift')], default=b'promotion', max_length=120, verbose_name='Deal type')),
                ('discounted_price', models.FloatField(blank=True, null=True, verbose_name='Discounted price')),
                ('discounted_percentage', models.FloatField(blank=True, null=True, verbose_name='Discounted percentage')),
                ('deal_description', models.TextField(blank=True, verbose_name='Description')),
                ('deal_start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start date')),
                ('deal_end_date', models.DateTimeField(blank=True, null=True, verbose_name='End date')),
                ('deal_conditions', models.TextField(blank=True, verbose_name='Conditions')),
                ('deal_data', jsonfield.fields.JSONField(blank=True, default=dict, verbose_name='Extra data (json format)')),
                ('short_description', models.TextField(blank=True, verbose_name='Short description')),
                ('description', models.TextField(blank=True, verbose_name='Long description')),
                ('upc', models.CharField(max_length=30, null=True, unique=True, verbose_name='Universal Product Code')),
                ('navimage', models.ImageField(null=True, upload_to=b'products/nav/', verbose_name='Navigation image')),
                ('price', models.FloatField(blank=True, null=True, verbose_name='Price')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
                ('carac1', models.CharField(blank=True, max_length=255, verbose_name='Caracteristic 1')),
                ('carac2', models.CharField(blank=True, max_length=255, verbose_name='Caracteristic 2')),
                ('carac3', models.CharField(blank=True, max_length=255, verbose_name='Caracteristic 3')),
                ('carac4', models.CharField(blank=True, max_length=255, verbose_name='Caracteristic 4')),
                ('carac5', models.CharField(blank=True, max_length=255, verbose_name='Caracteristic 5')),
                ('int_carac1', models.IntegerField(blank=True, null=True, verbose_name='Integer caracteristic 1')),
                ('int_carac2', models.IntegerField(blank=True, null=True, verbose_name='Integer caracteristic 2')),
                ('int_carac3', models.IntegerField(blank=True, null=True, verbose_name='Integer caracteristic 3')),
                ('int_carac1_name', models.CharField(blank=True, max_length=255, verbose_name='Integer caracteristic 1 name')),
                ('int_carac2_name', models.CharField(blank=True, max_length=255, verbose_name='Integer caracteristic 2 name')),
                ('int_carac3_name', models.CharField(blank=True, max_length=255, verbose_name='Integer caracteristic 3 name')),
                ('slideshow_width', models.PositiveSmallIntegerField(blank=True, default=800, null=True, verbose_name='Width')),
                ('slideshow_height', models.PositiveSmallIntegerField(blank=True, default=600, null=True, verbose_name='Height')),
                ('slideshow_type', models.CharField(choices=[(b'jssor/slideshows/full_width_slider.html', 'Full width slider'), (b'jssor/slideshows/banner_slider.html', 'Banner slider'), (b'jssor/slideshows/bootstrap_slider.html', 'Bootstrap slider'), (b'jssor/slideshows/images_gallery.html', 'Images gallery'), (b'jssor/slideshows/bootstrap_modal.html', 'Bootstrap modal')], default=b'jssor/slideshows/bootstrap_slider.html', max_length=150, verbose_name='Slideshow type')),
                ('template_name', models.CharField(choices=[(b'default', 'Default'), (b'fullwidth_slideshow', 'Fullwidth slideshow')], default=b'default', max_length=60, verbose_name='Template')),
                ('extra', jsonfield.fields.JSONField(blank=True, default=dict, verbose_name='Extra infos')),
                ('qrcode', models.ImageField(blank=True, null=True, upload_to=b'products/qr/', verbose_name='Qr code')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='mcat.Brand', verbose_name='Brand')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mcat.Category', verbose_name='Category')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Edited by')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductCaracteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Edited')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=120, verbose_name='Name')),
                ('type', models.CharField(max_length=255, verbose_name='Type')),
                ('type_name', models.CharField(max_length=255, verbose_name='Type name')),
                ('value', models.CharField(max_length=255, verbose_name='Value')),
                ('value_name', models.CharField(max_length=255, verbose_name='Value name')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Edited by')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='caracteristics', to='mcat.Product', verbose_name='Product')),
            ],
            options={
                'ordering': ('name', 'created'),
                'verbose_name': 'Product caracteristic',
                'verbose_name_plural': 'Product caracteristics',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edited', models.DateTimeField(auto_now=True, verbose_name='Edited')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Published'), (1, 'Pending'), (2, 'Unpublished')], default=0, verbose_name='Status')),
                ('order', models.PositiveSmallIntegerField(verbose_name='Order')),
                ('image', models.ImageField(upload_to=b'products', verbose_name='Image')),
                ('editor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Edited by')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='mcat.Product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Product image',
                'verbose_name_plural': 'Product images',
            },
        ),
        migrations.AlterUniqueTogether(
            name='productcaracteristic',
            unique_together=set([('name', 'product')]),
        ),
        migrations.AlterOrderWithRespectTo(
            name='product',
            order_with_respect_to='category',
        ),
    ]
